library(fontawesome)
library(dplyr)
library(stringr)
library(flexdashboard)
library(DT)
COUNTRY_DF <- read.csv(file = '../Data/factsheet_data.csv')
COLS <- c("Name", "Namelsad", "Representative", "Party.Affiliation",  "Mexican.Pop", "Total.Pop", "Exports.to.Mexico..2018..USD.Million.", "Total.Jobs..2018")
COL_NAMES <-c("State", "District", "Representative", "Party Affiliation", "Mexican Population", "Total Population", "Exports to Mexico 2018 (USD Million)", "Total Jobs 2018")
clean_df <- function(df) {
df = df[, COLS]
#for-loop takes subset of columns and cleans their names
for (col in colnames(df)) {
idx <- match(col, COLS)
df[[col]] <- prettyNum(df[[col]],big.mark=",")
names(df)[names(df) == col] <- COL_NAMES[[idx]]
}
return(df)
}
subset_state <- function(country_df, state) {
#country_df$Pctmex <- round(country_df[['Mexican.Pop']] / country_df[['Total.Pop']] * 100, digits=0)
state_df <- country_df %>% dplyr::filter(State == state)
#code below orders districts in ascending order
state_df$District <- factor(state_df$District, levels = str_sort(state_df$District, numeric=TRUE))
state_df = state_df[order(state_df$District),]
rownames(state_df) <- 1:nrow(state_df)
return(state_df)
}
district_info <- function(state_df, district) {
return (state_df %>% dplyr::filter(District == district))
}
go <- function(){
df <- clean_df(COUNTRY_DF)
states <- dplyr::distinct(df, State)
demog_folder = '../Data/factsheets_demography'
trade_folder = '../Data/factsheets_trade'
if(!dir.exists(demog_folder) && !dir.exists(trade_folder) ) {
dir.create(demog_folder)
dir.create(trade_folder)
}
for (i in 1:nrow(states)) {
state <- states[i,]
state_df <- subset_state(df, state)
demog_table <- state_df[, c('District', 'Representative', 'Party Affiliation', 'Mexican Population', 'Total Population')]
trade_table <- state_df[, c('District', "Representative", 'Party Affiliation',  "Exports to Mexico 2018 (USD Million)", "Total Jobs 2018" )]
districts <- state_df$District
for (n in 1:length(districts)) {
district <- toString(districts[[n]])
district_stats <- district_info(state_df, district)
if (nrow(demog_table) <= 6) {
rmarkdown::render('demog_dash6.Rmd', output_file = district, output_dir = demog_folder,
params = list(demography_table = demog_table, district_df=district_stats))
#rmarkdown::render('trade')
}
else {
rmarkdown::render('demog_dash.Rmd', output_file = district, output_dir = demog_folder,
params = list(demography_table = demog_table, district_df=district_stats))
#rmarkdown::render('trade')
}
}
}
}
if (!interactive()) {
go()
}
go()
# from command line, run:$ Rscript gen_reports.R
#
#install.packages("dplyr")
#install.packages("stringr")
#install.packages("flexdashboard")
#install.packages("remotes")
#remotes::install_github("rstudio/fontawesome")
#install.packages("DT")
#
library(fontawesome)
library(dplyr)
library(stringr)
library(flexdashboard)
library(DT)
COUNTRY_DF <- read.csv(file = '../Data/factsheet_data.csv')
COLS <- c("Name", "Namelsad", "Representative", "Party.Affiliation",  "Mexican.Pop", "Total.Pop", "Exports.to.Mexico..2018..USD.Million.", "Total.Jobs..2018")
COL_NAMES <-c("State", "District", "Representative", "Party Affiliation", "Mexican Population", "Total Population", "Exports to Mexico 2018 (USD Million)", "Total Jobs 2018")
clean_df <- function(df) {
df = df[, COLS]
#for-loop takes subset of columns and cleans their names
for (col in colnames(df)) {
idx <- match(col, COLS)
df[[col]] <- prettyNum(df[[col]],big.mark=",")
names(df)[names(df) == col] <- COL_NAMES[[idx]]
}
return(df)
}
subset_state <- function(country_df, state) {
#country_df$Pctmex <- round(country_df[['Mexican.Pop']] / country_df[['Total.Pop']] * 100, digits=0)
state_df <- country_df %>% dplyr::filter(State == state)
#code below orders districts in ascending order
state_df$District <- factor(state_df$District, levels = str_sort(state_df$District, numeric=TRUE))
state_df = state_df[order(state_df$District),]
rownames(state_df) <- 1:nrow(state_df)
return(state_df)
}
district_info <- function(state_df, district) {
return (state_df %>% dplyr::filter(District == district))
}
go <- function(){
df <- clean_df(COUNTRY_DF)
states <- dplyr::distinct(df, State)
demog_folder = '../Data/factsheets_demography'
trade_folder = '../Data/factsheets_trade'
if(!dir.exists(demog_folder) && !dir.exists(trade_folder) ) {
dir.create(demog_folder)
dir.create(trade_folder)
}
for (i in 1:nrow(states)) {
state <- states[i,]
state_df <- subset_state(df, state)
demog_table <- state_df[, c('District', 'Representative', 'Party Affiliation', 'Mexican Population', 'Total Population')]
trade_table <- state_df[, c('District', "Representative", 'Party Affiliation',  "Exports to Mexico 2018 (USD Million)", "Total Jobs 2018" )]
districts <- state_df$District
for (n in 1:length(districts)) {
district <- toString(districts[[n]])
district_stats <- district_info(state_df, district)
if (nrow(demog_table) <= 6) {
rmarkdown::render('demog_dash6.Rmd', output_file = district, output_dir = demog_folder,
params = list(demography_table = demog_table, district_df=district_stats))
#rmarkdown::render('trade')
}
else {
rmarkdown::render('demog_dash.Rmd', output_file = district, output_dir = demog_folder,
params = list(demography_table = demog_table, district_df=district_stats))
#rmarkdown::render('trade')
}
}
}
}
if (!interactive()) {
go()
}
COUNTRY_DF <- read.csv(file = '../Data/factsheet_data.csv')
COLS <- c("Name", "Namelsad", "Representative", "Party.Affiliation",  "Mexican.Pop", "Total.Pop", "Exports.to.Mexico..2018..USD.Million.", "Total.Jobs..2018")
COL_NAMES <-c("State", "District", "Representative", "Party Affiliation", "Mexican Population", "Total Population", "Exports to Mexico 2018 (USD Million)", "Total Jobs 2018")
clean_df <- function(df) {
df = df[, COLS]
#for-loop takes subset of columns and cleans their names
for (col in colnames(df)) {
idx <- match(col, COLS)
df[[col]] <- prettyNum(df[[col]],big.mark=",")
names(df)[names(df) == col] <- COL_NAMES[[idx]]
}
return(df)
}
#setwd(paste(getwd(), '/wsl/git/us-mex_trade',sep=''))
library(dplyr)
subset_state <- function(country_df, state) {
#country_df$Pctmex <- round(country_df[['Mexican.Pop']] / country_df[['Total.Pop']] * 100, digits=0)
state_df <- country_df %>% dplyr::filter(State == state)
#code below orders districts in ascending order
state_df$District <- factor(state_df$District, levels = str_sort(state_df$District, numeric=TRUE))
state_df = state_df[order(state_df$District),]
rownames(state_df) <- 1:nrow(state_df)
return(state_df)
}
district_info <- function(state_df, district) {
return (state_df %>% dplyr::filter(District == district))
}
state = 'Vermont'
district = 'Vermont Congressional District (at Large)'
state_df <- state_df <- subset_state(df, state)
demog_table <- state_df[, c('District', 'Representative', 'Party Affiliation', 'Mexican Population', 'Total Population')]
district_stats <- district_info(state_df, district)
print(nrow(demog_table))
if (nrow(demog_table) <= 6) {
print('here11111111111')
rmarkdown::render('demog_dash6.Rmd', output_file = district, output_dir = data_folder,
params = list(demography_table = demog_table, district_df=district_stats))
}
if (nrow(demog_table > 6)) {
print(nrow(demog_table))
print('here')
rmarkdown::render('demog_dash.Rmd', output_file = district, output_dir = data_folder,
params = list(demography_table = demog_table, district_df=district_stats))
}
library(dplyr)
library(dplyr)
subset_state <- function(country_df, state) {
#country_df$Pctmex <- round(country_df[['Mexican.Pop']] / country_df[['Total.Pop']] * 100, digits=0)
state_df <- country_df %>% dplyr::filter(State == state)
#code below orders districts in ascending order
state_df$District <- factor(state_df$District, levels = str_sort(state_df$District, numeric=TRUE))
state_df = state_df[order(state_df$District),]
rownames(state_df) <- 1:nrow(state_df)
return(state_df)
}
district_info <- function(state_df, district) {
return (state_df %>% dplyr::filter(District == district))
}
state = 'Vermont'
district = 'Vermont Congressional District (at Large)'
state_df <- state_df <- subset_state(df, state)
packages.install('dplyr')
install.packages('dplyr')
getwd()
getwd()
#setwd(paste(getwd(), '/wsl/git/us-mex_trade',sep=''))
subset_state <- function(country_df, state) {
#country_df$Pctmex <- round(country_df[['Mexican.Pop']] / country_df[['Total.Pop']] * 100, digits=0)
state_df <- country_df %>% dplyr::filter(State == state)
#code below orders districts in ascending order
state_df$District <- factor(state_df$District, levels = str_sort(state_df$District, numeric=TRUE))
state_df = state_df[order(state_df$District),]
rownames(state_df) <- 1:nrow(state_df)
return(state_df)
}
district_info <- function(state_df, district) {
return (state_df %>% dplyr::filter(District == district))
}
state = 'Vermont'
district = 'Vermont Congressional District (at Large)'
state_df <- state_df <- subset_state(df, state)
COUNTRY_DF
DF <- COUNTRY_DF
DF
COUNTRY_DF <- read.csv(file = '../Data/factsheet_data.csv')
COLS <- c("Name", "Namelsad", "Representative", "Party.Affiliation",  "Mexican.Pop", "Total.Pop", "Exports.to.Mexico..2018..USD.Million.", "Total.Jobs..2018")
COL_NAMES <-c("State", "District", "Representative", "Party Affiliation", "Mexican Population", "Total Population", "Exports to Mexico 2018 (USD Million)", "Total Jobs 2018")
COUNTRY_DF
df <- COUNTRY_DF
View(df)
state_df <- country_df %>% dplyr::filter(State == state)
#code below orders districts in ascending order
state_df$District <- factor(state_df$District, levels = str_sort(state_df$District, numeric=TRUE))
state_df = state_df[order(state_df$District),]
rownames(state_df) <- 1:nrow(state_df)
country_df <- df
state_df <- country_df %>% dplyr::filter(State == state)
#code below orders districts in ascending order
state_df$District <- factor(state_df$District, levels = str_sort(state_df$District, numeric=TRUE))
state_df = state_df[order(state_df$District),]
rownames(state_df) <- 1:nrow(state_df)
state_df <- country_df %>% dplyr::filter(State == state)
country_df <- clean_df(country_df)
state_df <- country_df %>% dplyr::filter(State == state)
#code below orders districts in ascending order
state_df$District <- factor(state_df$District, levels = str_sort(state_df$District, numeric=TRUE))
state_df = state_df[order(state_df$District),]
rownames(state_df) <- 1:nrow(state_df)
View(country_df)
View(state_df)
demog_table <- state_df[, c('District', 'Representative', 'Party Affiliation', 'Mexican Population', 'Total Population')]
district_stats <- district_info(state_df, district)
print(nrow(demog_table))
if (nrow(demog_table) <= 6) {
rmarkdown::render('demog_dash6.Rmd', output_file = district, output_dir = data_folder,
params = list(demography_table = demog_table, district_df=district_stats))
}
data_folder  = '../Data/factsheets_demography'
state = 'Vermont'
district = 'Vermont Congressional District (at Large)'
state_df <- state_df <- subset_state(df, state)
demog_table <- state_df[, c('District', 'Representative', 'Party Affiliation', 'Mexican Population', 'Total Population')]
district_stats <- district_info(state_df, district)
print(nrow(demog_table))
if (nrow(demog_table) <= 6) {
rmarkdown::render('demog_dash6.Rmd', output_file = district, output_dir = data_folder,
params = list(demography_table = demog_table, district_df=district_stats))
}
if (nrow(demog_table > 6)) {
print(nrow(demog_table))
print('here')
rmarkdown::render('demog_dash.Rmd', output_file = district, output_dir = data_folder,
params = list(demography_table = demog_table, district_df=district_stats))
}
if (nrow(demog_table) <= 6) {
rmarkdown::render('demog_dash6.Rmd', output_file = district, output_dir = data_folder,
params = list(demography_table = demog_table, district_df=district_stats))
}
data_folder  = '../Data/factsheets_demography'
state = 'Ohio'
district = 'Ohio 7th'
state_df <- state_df <- subset_state(df, state)
demog_table <- state_df[, c('District', 'Representative', 'Party Affiliation', 'Mexican Population', 'Total Population')]
district_stats <- district_info(state_df, district)
print(nrow(demog_table))
if (nrow(demog_table) <= 6) {
rmarkdown::render('demog_dash6.Rmd', output_file = district, output_dir = data_folder,
params = list(demography_table = demog_table, district_df=district_stats))
}
state_df <- country_df %>% dplyr::filter(State == state)
#code below orders districts in ascending order
state_df$District <- factor(state_df$District, levels = str_sort(state_df$District, numeric=TRUE))
state_df = state_df[order(state_df$District),]
rownames(state_df) <- 1:nrow(state_df)
View(state_df)
demog_table <- state_df[, c('District', 'Representative', 'Party Affiliation', 'Mexican Population', 'Total Population')]
district_stats <- district_info(state_df, district)
print(nrow(demog_table))
if (nrow(demog_table > 6)) {
print(nrow(demog_table))
print('here')
rmarkdown::render('demog_dash.Rmd', output_file = district, output_dir = data_folder,
params = list(demography_table = demog_table, district_df=district_stats))
}
if (nrow(demog_table > 6)) {
print(nrow(demog_table))
print('here')
rmarkdown::render('demog_dash.Rmd', output_file = district, output_dir = data_folder,
params = list(demography_table = demog_table, district_df=district_stats))
}
COUNTRY_DF <- read.csv(file = '../Data/factsheet_data.csv')
View(COUNTRY_DF)
data_folder  = '../Data/factsheets_demography'
state = 'Ohio'
district = 'Ohio 7th'
state_df <- state_df <- subset_state(df, state)
demog_table <- state_df[, c('District', 'Representative', 'Party Affiliation', 'Mexican Population', 'Total Population')]
district_stats <- district_info(state_df, district)
if (nrow(demog_table) <= 6) {
rmarkdown::render('demog_dash6.Rmd', output_file = district, output_dir = data_folder,
params = list(demography_table = demog_table, district_df=district_stats))
list.of.packages <- c("fontawesome", "dplyr", "stringr", "flexdashboard", "DT")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
list.of.packages <- c("fontawesome", "dplyr", "stringr", "flexdashboard", "DT")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) {install.packages(new.packages)}
}
list.of.packages <- c("fontawesome", "dplyr", "stringr", "flexdashboard", "DT")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) {install.packages(new.packages)}
install.packages("fontawesome")
library(dplyr)
data_folder  = '../Data/factsheets_demography'
state = 'Ohio'
district = 'Ohio 7th'
state_df <- state_df <- subset_state(df, state)
demog_table <- state_df[, c('District', 'Representative', 'Party Affiliation', 'Mexican Population', 'Total Population')]
district_stats <- district_info(state_df, district)
rmarkdown::render('demog_dash.Rmd', output_file = district, output_dir = data_folder,
params = list(demography_table = demog_table, district_df=district_stats))
data_folder  = '../Data/factsheets_demography'
state = 'Connecticut'
district = 'Connecticut 5th'
state_df <- state_df <- subset_state(df, state)
demog_table <- state_df[, c('District', 'Representative', 'Party Affiliation', 'Mexican Population', 'Total Population')]
district_stats <- district_info(state_df, district)
rmarkdown::render('demog_dash.Rmd', output_file = district, output_dir = data_folder,
params = list(demography_table = demog_table, district_df=district_stats))
library(dplyr)
data_folder  = '../Data/factsheets_demography'
state = 'Connecticut'
district = 'Connecticut 5th'
state_df <- state_df <- subset_state(df, state)
demog_table <- state_df[, c('District', 'Representative', 'Party Affiliation', 'Mexican Population', 'Total Population')]
district_stats <- district_info(state_df, district)
rmarkdown::render('demog_dash.Rmd', output_file = district, output_dir = data_folder,
params = list(demography_table = demog_table, district_df=district_stats))
district_stats
data_folder  = '../Data/factsheets_demography'
state = 'Connecticut'
district = 'Connecticut 5th'
state_df <- state_df <- subset_state(df, state)
demog_table <- state_df[, c('District', 'Representative', 'Party Affiliation', 'Mexican Population', 'Total Population')]
district_stats <- district_info(state_df, district)
rmarkdown::render('demog_dash.Rmd', output_file = district, output_dir = data_folder,
params = list(demography_table = demog_table, district_df=district_stats))
COUNTRY_DF <- read.csv(file = '../Data/factsheet_data.csv')
COLS <- c("Name", "Namelsad", "Representative", "Party.Affiliation",  "Mexican.Pop", "Total.Pop", "Exports.to.Mexico..2018..USD.Million.", "Total.Jobs..2018")
COL_NAMES <-c("State", "District", "Representative", "Party Affiliation", "Mexican Population", "Total Population", "Exports to Mexico 2018 (USD Million)", "Total Jobs 2018")
clean_df <- function(df) {
df = df[, COLS]
#for-loop takes subset of columns and cleans their names
for (col in colnames(df)) {
idx <- match(col, COLS)
df[[col]] <- prettyNum(df[[col]],big.mark=",")
names(df)[names(df) == col] <- COL_NAMES[[idx]]
}
return(df)
}
#setwd(paste(getwd(), '/wsl/git/us-mex_trade',sep=''))
subset_state <- function(country_df, state) {
#country_df$Pctmex <- round(country_df[['Mexican.Pop']] / country_df[['Total.Pop']] * 100, digits=0)
state_df <- country_df %>% dplyr::filter(State == state)
#code below orders districts in ascending order
state_df$District <- factor(state_df$District, levels = str_sort(state_df$District, numeric=TRUE))
state_df = state_df[order(state_df$District),]
rownames(state_df) <- 1:nrow(state_df)
return(state_df)
}
district_info <- function(state_df, district) {
return (state_df %>% dplyr::filter(District == district))
}
library(dplyr)
data_folder  = '../Data/factsheets_demography'
state = 'Connecticut'
district = 'Connecticut 5th'
state_df <- state_df <- subset_state(df, state)
demog_table <- state_df[, c('District', 'Representative', 'Party Affiliation', 'Mexican Population', 'Total Population')]
district_stats <- district_info(state_df, district)
rmarkdown::render('demog_dash.Rmd', output_file = district, output_dir = data_folder,
params = list(demography_table = demog_table, district_df=district_stats))
state
state_df
state_df <- state_df <- subset_state(df, state)
library(dplyr)
twd(paste(getwd(), '/wsl/git/us-mex_trade',sep=''))
subset_state <- function(country_df, state) {
#country_df$Pctmex <- round(country_df[['Mexican.Pop']] / country_df[['Total.Pop']] * 100, digits=0)
state_df <- country_df %>% dplyr::filter(State == state)
#code below orders districts in ascending order
state_df$District <- factor(state_df$District, levels = str_sort(state_df$District, numeric=TRUE))
state_df = state_df[order(state_df$District),]
rownames(state_df) <- 1:nrow(state_df)
return(state_df)
}
district_info <- function(state_df, district) {
return (state_df %>% dplyr::filter(District == district))
}
library(dplyr)
data_folder  = '../Data/factsheets_demography'
state = 'Connecticut'
district = 'Connecticut 5th'
state_df <- state_df <- subset_state(df, state)
demog_table <- state_df[, c('District', 'Representative', 'Party Affiliation', 'Mexican Population', 'Total Population')]
district_stats <- district_info(state_df, district)
rmarkdown::render('demog_dash.Rmd', output_file = district, output_dir = data_folder,
t
)
subset_state <- function(country_df, state) {
#country_df$Pctmex <- round(country_df[['Mexican.Pop']] / country_df[['Total.Pop']] * 100, digits=0)
state_df <- country_df %>% dplyr::filter(State == state)
#code below orders districts in ascending order
state_df$District <- factor(state_df$District, levels = str_sort(state_df$District, numeric=TRUE))
state_df = state_df[order(state_df$District),]
rownames(state_df) <- 1:nrow(state_df)
return(state_df)
}
district_info <- function(state_df, district) {
return (state_df %>% dplyr::filter(District == district))
}
library(dplyr)
data_folder  = '../Data/factsheets_demography'
state = 'Connecticut'
district = 'Connecticut 5th'
state_df <- state_df <- subset_state(df, state)
demog_table <- state_df[, c('District', 'Representative', 'Party Affiliation', 'Mexican Population', 'Total Population')]
district_stats <- district_info(state_df, district)
rmarkdown::render('demog_dash.Rmd', output_file = district, output_dir = data_folder,
params = list(demography_table = demog_table, district_df=district_stats))
state_df <- state_df <- subset_state(df, state)
data_folder  = '../Data/factsheets_demography'
state = 'Connecticut'
district = 'Connecticut 5th'
state_df <- subset_state(df, state)
demog_table <- state_df[, c('District', 'Representative', 'Party Affiliation', 'Mexican Population', 'Total Population')]
district_stats <- district_info(state_df, district)
rmarkdown::render('demog_dash.Rmd', output_file = district, output_dir = data_folder,
params = list(demography_table = demog_table, district_df=district_stats))
state_df
data_folder  = '../Data/factsheets_demography'
state = 'Connecticut'
district = 'Connecticut 5th'
state_df <- subset_state(df, state)
state_df
library(dplyr)
data_folder  = '../Data/factsheets_demography'
state = 'Connecticut'
district = 'Connecticut 5th'
state_df <- subset_state(df, state)
state_df
state_df$'Pct Mex' = state_df$'Mexican Population' / state_df$`Total Population`
state_df$'Mexican Population'
state_df$'Mexican Population'[[1]]
class(state_df$'Mexican Population'[[1]])
COUNTRY_DF
COUNTRY_DF
COUNTRY_DF <- read.csv(file = '../Data/factsheet_data.csv')
COUNTRY_DF['Mexican.Population']
COUNTRY_DF
df <- COUNTRY_DF
df
df[,'Name']
df[,'Name'] == 'Ohio'
df[df[,'Name'] == 'Ohio']
df[[df[,'Name'] == 'Ohio']]
df[,'Name'] == 'Ohio'
mask = df[,'Name'] == 'Ohio'
df[, mask]
df[mask,]
df[mask,]
mask = df[,'Name'] == 'Ohio'
mask = df[[,'Name']] == 'Ohio'
mask = df[['Name']] == 'Ohio'
mask
COLS
COL_NAMES
COL_NAMES
c = COL_NAMES
c['Population' %in% c]
grepl
grepl()
grepl('Population', 'Mexican Population')
c[grepl('Population', c)]
df
df %>% group_by(Name)
df
colnames(df)
class(colnames(df))
round(100/33, digits=1)
round(100/33, digits=2)
round(100/32, digits=1)
COUNTRY_DF <- read.csv(file = '../Data/factsheet_data.csv')
View(COUNTRY_DF)
